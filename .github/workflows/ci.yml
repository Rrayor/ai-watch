name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Build extension
      run: npm run compile

    - name: Instrument compiled code for coverage
      run: |
        # Instrument compiled JS so the Electron test host executes instrumented code
        npx nyc instrument out out_instrumented
        rm -rf out && mv out_instrumented out

    - name: Run tests against instrumented code
      run: |
        export DISPLAY=':99.0'
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        # Run tests; instrumented code will record coverage during Electron execution
        npx vscode-test --coverage --coverage-output ./coverage --coverage-reporter lcov --coverage-reporter text

    - name: Generate nyc lcov report
      run: |
        # If instrumentation produced .nyc_output coverage, generate lcov
        npx nyc report --reporter=lcov --reporter=text || true

    - name: Dump coverage for debugging
      run: |
        echo "Working dir: $(pwd)"
        ls -la coverage || true
        echo "===== lcov head ====="
        head -n 80 coverage/lcov.info || true
        echo "===== SF entries (source files covered) ====="
        grep -n '^SF:' coverage/lcov.info || true

    - name: Remap coverage to TypeScript sources
      run: |
        npm run remap-coverage
    - name: Dump remapped coverage for verification
      run: |
        echo "=== remapped lcov head ==="
        head -n 80 coverage/lcov.info || true
        echo "=== remapped SF entries ==="
        grep -n '^SF:' coverage/lcov.info || true

    - name: Upload coverage to DeepSource
      run: |
        # Install deepsource CLI
        curl https://deepsource.io/cli | sh
        # Upload coverage report
        ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/lcov.info
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
